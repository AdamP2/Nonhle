@model MontclairModels.ItemEntity

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm(actionName: "Edit", controllerName: "Items", routeValues: null, method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @*<div class="form-horizontal">
        <h4>ItemEntity</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemCode)

        <div class="form-group">
            @Html.LabelFor(model => model.Category_ID, "Category_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuantityInStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuantityInStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuantityInStock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <input type="file" name="img_upload" accept=".jpeg,.jpg,.png" onchange="readURL(this);" class="form-control" required="required" />
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}



<div class="row">
    <div class="col-md-4">
        <table>
            <tr>

                <th width="80px">@Html.LabelFor(model => model.ItemCode)</th>
                <td>
                    @Html.EditorFor(model => model.ItemCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ItemCode, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <th>@Html.LabelFor(model => model.Category_ID)</th>
                <td>
                    @Html.DropDownList("Category_ID", null, "--- Please Select ---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category_ID, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <th>@Html.LabelFor(model => model.Name)</th>
                <td>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Description" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <th>@Html.LabelFor(model => model.Description)</th>
                <td>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Description" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <th width="80px">@Html.LabelFor(model => model.QuantityInStock)</th>
                <td>
                    @Html.EditorFor(model => model.QuantityInStock, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.QuantityInStock, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <th>@Html.LabelFor(model => model.Price)</th>
                <td width="180px">
                    <div class="input-group">
                        <div class="input-group-addon">
                            <b>R</b>
                        </div>
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @placeholder = "0.00" } })

                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>

                </td>
            </tr>
            <tr>
                <th>@Html.LabelFor(model => model.Picture)</th>
                <td>
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-file-picture-o"></i>
                        </div>
                        <input type="file" name="img_upload" accept=".jpeg,.jpg,.png" onchange="readURL(this);" class="form-control" required="required" />
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <a class="btn btn-default" href="@Url.Action("Index","Items")">
                        <i class="fa fa-angle-left"></i>
                        Back to List
                    </a>
                </td>
                <td class="pull-right">
                    <input type="submit" value="Save Changes" class="btn btn-default" />
                </td>
            </tr>
        </table>
    </div>
    <div class="col-md-6">
        <img id="image_preview" src="#" alt="" @*style="border: 5px solid #ccc"*@ />
    </div>
</div>


<div class="col-md-6">
    <div class="col-md-6">
        <img id="image_preview" src="#" alt="" />
    </div>

    <script type="text/javascript">
        //image preview
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image_preview')
                        .attr('src', e.target.result)
                        .width(400)
                        .height(400);

                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
