@model IEnumerable<MontclairModels.ItemEntity>
@{
    ViewBag.Title = "Shopping";
}
<style>
</style>
<h2 class="title text-center"></h2>
@using (Html.BeginForm("Index", "Shopping", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    @Html.DropDownList("Categoery Name", (SelectList)ViewBag.CompanyId, "Select Category",   new { @class = "form-control" })
    <input type="submit" value="Search" class="btn btn-primary" />
}
<div class="row">
    @foreach (var item in Model)
    {

        <div class="col-md-3 offset-md-4 table-bordered " style="height:270px  ">

            <div class="row" style="text-align: center;padding-top:5px">
                @if (item.Picture != null)
                {
                    var base64 = Convert.ToBase64String(inArray: item.Picture);
                    var imgSrc = string.Format(format: "data:image/gif;base64,{0}", arg0: base64);
                    <img src="@imgSrc" width="90" height="70" />
                }
            </div>
            <div class="row">
                <p style="text-align: center">
                    <b> @Html.DisplayFor(expression: modelItem => item.Name)</b>
                </p>
                <p style="text-align: center">
                    @Html.DisplayFor(expression: modelItem => item.Description)
                </p>
                <p style="text-align: center">
                    @Html.DisplayFor(expression: modelItem => item.colour)
                </p>

                <p style="text-align: center">
                    @Html.DisplayFor(expression: modelItem => item.size)
                </p>
                @*<p style="text-align: center">
                        @Html.DisplayFor(expression: modelItem => item.shape)
                    </p>*@
                <p style="text-align: center;font-size:small;">
                    @Html.DisplayFor(expression: modelItem => item.Price)
                </p>
                <p style="text-align: center">
                    @*<a href="@Url.Action(actionName: "add_to_cart", controllerName: "Shopping", routeValues: new {id = item.ItemCode})" class="btn disabled btn-default"><i class="fa fa-shopping-cart disabled"></i> </a>*@

                    <a href="@Url.Action(actionName: "add_to_cart", controllerName: "Shopping", routeValues: new {id = item.ItemCode})" class="btn btn-default"><i class="fa fa-shopping-cart"></i> Add to cart</a>

                </p>

            </div>
        </div>

    }


</div>

@if (ViewBag.Err != null)
{

}


<br />
<br />
<td>
    <a href="@Url.Action("Index", "Home")" class="btn btn-default"><i class="fa fa-arrow-left"></i> Back to Home</a>
</td>


